Perspective
The goal of this chapter has been to show you how to use the servlet API
to track sessions and work with cookies. If you understand the code in the
Download application that‚Äôs presented at the end of this chapter, this chapter
has achieved its goal. As a result, you should now be able to develop web
applications that require session tracking.
In the previous chapter, you learned how to work with a special type of
Java class known as a JavaBean. In that chapter, you stored a JavaBean as an
attribute of the request object. However, it‚Äôs also common to store a JavaBean
as an attribute of the session object as shown in this chapter.
In the early days of servlet/JSP programming, it was more common for
web browsers to have per-session cookies disabled, and the security flaws with
URL encoding weren‚Äôt widely known. As a result, it was more common to use
URL encoding to provide for session tracking.
Today, it‚Äôs less common for web browsers to have per-session cookies
disabled, and the security flaws with URL encoding are widely known. As a
result, it isn‚Äôt considered a good practice to use URL encoding.
Summary
Because HTTP is a stateless protocol, web applications must provide for
session tracking.That way, an application is able to relate each request to a
specific browser and to the data for that session.
To provide for session tracking,Java creates one session object for each
browser. Then, you can add attributes like variables and objects to this
session object, and you can retrieve the values of these attributes in any of
the servlets and JSPs that are run during the session.
In general, it‚Äôs considered a best practice to implement session tracking
by using cookies. Then, the session ID is stored in a cookie on the user‚Äôs
browser. This type of session tracking is done automatically by the servlet
API, but it doesn‚Äôt work unless the browser enables cookies.
Persistent cookies are stored on the user‚Äôs PC, while per-session cookies are
deleted when the session ends.
It‚Äôs also possible to implement session tracking by using URL encoding.
This works even when the browser doesn‚Äôt enable cookies. However, it can
lead to session hijacking. As a result, it‚Äôs considered a bad practice.
To create cookies, use the methods of the Cookie class. To store a cookie on
the user‚Äôs browser, use the addCookie method of the response object. To get
the cookies from a browser, use the getCookies method of the request object.
To pass parameters to a servlet, you can use URL rewriting or hidden fields.
When you use hidden fields, you can easily include spaces and special
characters in your parameter values. In addition, you can pass parameters
more securely than you can with URL rewriting.
241 Chapter 7 How to work with sessions and cookies
Exercise 7-1 Use a cookie
1. Open the ch07_exl_download project in the ex_starts directory.
2. Run the project. This should display a list of album links.
3. Click on the link lor an album. This should display the Register page.
4. User the Register page to register. This should take you to a Downloads page
where you can listen to an MP3 file.
When you click on an MP3 link on the Downloads page, your browser
should play the corresponding sound file. For this to work, the Music Store
application must he deployed. If it isn‚Äôt, you‚Äôll get a 404 error when you click
on the MP3 link. To fix this, you can open the musicStore project in the
book_apps directory and run it.
5. From a Downloads page, click the View All Cookies link. This should display
all of the cookies that this application has sent to your browser. This should
include the cookie named emailCookie and a cookie named JSESS10N1D.
6. Click the Delete All Persistent Cookies link to delete all persistent cookies.
7. Close your browser and run the application again. Then, click on a link for an
album. This should display the Register page again.
8. Use the Register page to register again.
9. Open the source code for the DownloadServlet. Then, modify the code that
adds the cookie so it stores the cookie with a name of ‚ÄúuserEmail‚Äù. Also,
modify this code so it stores the cookie for 3 years.
10. Open the index.jsp file and add code to the top of the page that displays the
name and value of the cookie. For an email address ofjsmith@gmail.com,
this code should display this output:
User Email: jsmith@gmail.com
To do this, you can add a p tag to the page with EL that uses the implicit
cookie object to get the value of the cookie that stores the user‚Äôs email
address.
11. Run the project again. Then, test to make sure it works correctly. To do that,
you can register, use the View All Cookies link to view the name and value of
this cookie, and use the Index page to view the value of the email cookie.
242 Section 2 Essential servlet and JSP skills
Exercise 7-2 Use a session attribute
i . Open the ch07_ex2_download project in the ex_starts directory.
Open the source code for the DownloadServlet class. Then, in the checkUser
method, modify the code so it sets the Product object as a session attribute
instead of setting the product code as a session attribute. To do that, you can
create a Product object that holds the data for the current product by using the
getProduct method of the murach.data.ProductIO class like this:
ServletContext sc = this.getServletContext();
String productPath = sc.getRealPath("WEB-INF/products.txt");
Product product
In the registerUser method, modify the code so it uses the Product object that‚Äôs
stored in the session to build the URL for the appropriate Download page.
For each product‚Äôs Download page, get the Product object from the session
object and use it to get the product code for the album as well as the
description for the album.
Run the Download application and test it to make sure it works correctly. To
get the MP3 links to work correctly, you may need to open the musicStore
project in the book_apps directory and run it.
View the cookies for this application. Then, click the Delete All Persistent
Cookies link to delete all persistent cookies.
Close the browser and run the Download application again to make sure the
DownloadServlet class still works correctly.
2.
ProductlO.getProduct(productCode, productPath);
3.
4.
5.
6.
7.
Exercise 7-3 Use URL rewriting instead
of hidden fields
i . Open the ch07_ex3_cart project in the ex_starts directory.
Open the source code for the CartServlet class. Note that this servlet only
supports the HTTP POST method.
Open the cart.jsp file. Then, convert the Remove button to a Remove link that
uses URL rewriting.
Run the application and test the Remove link. This link shouldn‚Äôt work since it
uses the HTTP GET method.
Modify the CartServlet class so it includes a doGet method that includes a
single statement that calls the doPost method. That way, the CartServlet uses
the same code to handle the HTTP POST and GET methods.
Run the application again and test the Remove link. Now, this link should
work correctly, and it should display the parameter names and values in the
browser‚Äôs URL.
Test the Update button too. Since this button uses the HTTP POST method, it
should not display the parameter names and values in the browser‚Äôs URL.



Chu·∫©n r·ªìi üëç. M√¨nh s·∫Ω li·ªát k√™ ch√≠nh x√°c **c√°c file b·∫°n c·∫ßn ch·ªânh s·ª≠a cho t·ª´ng b√†i t·∫≠p trong ch∆∞∆°ng 7**, theo ƒë·ªÅ b√†i:

---

## üîπ B√†i 7-1 (Cookie) ‚Äì `ch07_ex1_download`

### File c·∫ßn s·ª≠a:

1. **`src/java/murach/download/DownloadServlet.java`**

   * Trong method ƒëƒÉng k√Ω user ‚Üí ch·ªó add cookie:

     * ƒê·ªïi t√™n cookie t·ª´ `emailCookie` ‚Üí `"userEmail"`.
     * ƒê·∫∑t `cookie.setMaxAge(60*60*24*365*3)` (3 nƒÉm).

2. **`web/index.jsp`**

   * ·ªû ƒë·∫ßu file, th√™m EL ƒë·ªÉ hi·ªÉn th·ªã cookie userEmail, v√≠ d·ª•:

     ```jsp
     <p>User Email: ${cookie.userEmail.value}</p>
     ```

üëâ C√°c file JSP kh√°c (register.jsp, view_cookies.jsp, delete_cookies.jsp‚Ä¶) kh√¥ng c·∫ßn ch·ªânh, ch·ªâ ƒë·ªÉ test th√¥i.

---

## üîπ B√†i 7-2 (Session Attribute) ‚Äì `ch07_ex2_download`

### File c·∫ßn s·ª≠a:

1. **`src/java/murach/download/DownloadServlet.java`**

   * Trong **`checkUser` method**:

     * Thay v√¨ `session.setAttribute("productCode", code);`
       ‚Üí t·∫°o `Product product = ProductIO.getProduct(productCode, productPath);`
       ‚Üí `session.setAttribute("product", product);`.
   * Trong **`registerUser` method**:

     * L·∫•y `Product product = (Product) session.getAttribute("product");`
     * D√πng `product.getCode()` v√† `product.getDescription()` ƒë·ªÉ build URL download page.

2. **C√°c file JSP download pages** (`8601_download.jsp`, `jr01_download.jsp`, `pf01_download.jsp`, `pf02_download.jsp`)

   * N·∫øu c·∫ßn hi·ªÉn th·ªã th√¥ng tin album, th√¨ thay EL ƒë·ªÉ l·∫•y t·ª´ session attribute `product` (v√≠ d·ª•: `${product.description}`) thay v√¨ ch·ªâ l·∫•y code string.

üëâ `web.xml` ch·ªâ ƒë·ªÉ mapping, kh√¥ng ph·∫£i ch·ªânh.

---

## üîπ B√†i 7-3 (URL Rewriting) ‚Äì `ch07_ex3_cart`

### File c·∫ßn s·ª≠a:

1. **`web/cart.jsp`**

   * Thay n√∫t Remove (button + POST form) th√†nh link (GET) v·ªõi URL rewriting:

     ```jsp
     <a href="cart?productCode=${item.product.code}&action=remove">Remove</a>
     ```

2. **`src/java/murach/cart/CartServlet.java`**

   * Th√™m method `doGet(HttpServletRequest req, HttpServletResponse res)` g·ªçi l·∫°i `doPost(req, res);`

     ```java
     @Override
     protected void doGet(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
         doPost(request, response);
     }
     ```

üëâ `checkout.jsp`, `index.jsp` kh√¥ng c·∫ßn ch·ªânh.

---

‚úÖ T√≥m g·ªçn:

* **Ex1**: `DownloadServlet.java` + `index.jsp`.
* **Ex2**: `DownloadServlet.java` + c√°c download JSP (n·∫øu c·∫ßn hi·ªÉn th·ªã product).
* **Ex3**: `cart.jsp` + `CartServlet.java`.

---

B·∫°n c√≥ mu·ªën m√¨nh vi·∫øt lu√¥n code m·∫´u ƒë√£ ch·ªânh s·ª≠a cho 3 file quan tr·ªçng nh·∫•t (**DownloadServlet Ex1**, **DownloadServlet Ex2**, **CartServlet Ex3**) ƒë·ªÉ copy-paste kh√¥ng?



|-- ch07download
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex1_download
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex1_download_sol
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex2_download
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |   +-- web.xml
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex2_download_sol
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |   +-- web.xml
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex3_cart
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |   +-- web.xml
|   |   |-- cart.jsp
|   |   |-- checkout.jsp
|   |   +-- index.jsp
|   +-- build.xml
|-- ch07_ex3_cart_sol
|   |-- src
|   |   +-- java
|   |-- web
|   |   |-- styles
|   |   |-- WEB-INF
|   |   |   +-- web.xml
|   |   |-- cart.jsp
|   |   |-- checkout.jsp
|   |   +-- index.jsp
|   +-- build.xml
+-- doc7.txt



|-- ch07_ex1_download
|   |-- nbproject
|   |   |-- private
|   |   |   |-- private.properties
|   |   |   +-- private.xml
|   |   |-- ant-deploy.xml
|   |   |-- build-impl.xml
|   |   |-- genfiles.properties
|   |   |-- project.properties
|   |   +-- project.xml
|   |-- src
|   |   |-- conf
|   |   |   +-- MANIFEST.MF
|   |   +-- java
|   |       +-- murach
|   |           |-- business
|   |           |   +-- User.java
|   |           |-- data
|   |           |   +-- UserIO.java
|   |           |-- download
|   |           |   +-- DownloadServlet.java
|   |           +-- util
|   |               +-- CookieUtil.java
|   |-- web
|   |   |-- META-INF
|   |   |   +-- context.xml
|   |   |-- styles
|   |   |   +-- main.css
|   |   |-- WEB-INF
|   |   |   +-- web.xml
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex2_download
|   |-- nbproject
|   |   |-- private
|   |   |   |-- private.properties
|   |   |   +-- private.xml
|   |   |-- ant-deploy.xml
|   |   |-- build-impl.xml
|   |   |-- genfiles.properties
|   |   |-- project.properties
|   |   +-- project.xml
|   |-- src
|   |   |-- conf
|   |   |   +-- MANIFEST.MF
|   |   +-- java
|   |       +-- murach
|   |           |-- business
|   |           |   |-- Product.java
|   |           |   +-- User.java
|   |           |-- data
|   |           |   |-- ProductIO.java
|   |           |   +-- UserIO.java
|   |           |-- download
|   |           |   +-- DownloadServlet.java
|   |           +-- util
|   |               +-- CookieUtil.java
|   |-- web
|   |   |-- META-INF
|   |   |   +-- context.xml
|   |   |-- styles
|   |   |   +-- main.css
|   |   |-- WEB-INF
|   |   |   |-- products.txt
|   |   |   +-- web.xml
|   |   |-- 8601_download.jsp
|   |   |-- delete_cookies.jsp
|   |   |-- index.jsp
|   |   |-- jr01_download.jsp
|   |   |-- pf01_download.jsp
|   |   |-- pf02_download.jsp
|   |   |-- register.jsp
|   |   +-- view_cookies.jsp
|   +-- build.xml
|-- ch07_ex3_cart
|   |-- nbproject
|   |   |-- private
|   |   |   |-- private.properties
|   |   |   +-- private.xml
|   |   |-- ant-deploy.xml
|   |   |-- build-impl.xml
|   |   |-- genfiles.properties
|   |   |-- project.properties
|   |   +-- project.xml
|   |-- src
|   |   |-- conf
|   |   |   +-- MANIFEST.MF
|   |   +-- java
|   |       +-- murach
|   |           |-- business
|   |           |   |-- Cart.java
|   |           |   |-- LineItem.java
|   |           |   +-- Product.java
|   |           |-- cart
|   |           |   +-- CartServlet.java
|   |           +-- data
|   |               +-- ProductIO.java
|   |-- web
|   |   |-- META-INF
|   |   |   +-- context.xml
|   |   |-- styles
|   |   |   +-- main.css
|   |   |-- WEB-INF
|   |   |   |-- products.txt
|   |   |   +-- web.xml
|   |   |-- cart.jsp
|   |   |-- checkout.jsp
|   |   +-- index.jsp
|   +-- build.xml
|-- libs
|   |-- javax.mail.jar
|   |-- jstl-1.2.jar
|   |-- mysql-connector-java-5.1.23-bin.jar
|   |-- poi-3.10-FINAL-20140208.jar
|   +-- tomcat-dbcp.jar